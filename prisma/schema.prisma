// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  username      String?   @unique

  role UserRole @default(USER)

  posts    Post[]
  accounts Account[]

  @@map("users")
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   Json?
  slug      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  visitCount Int    @default(0)
  author     User   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId   String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  Comment Comment[]
}

model Category {
  id   String @id @default(cuid())
  name String @unique
  slug String @unique

  posts Post[]
}

model Comment {
  id        String   @id @default(cuid())
  name      String
  email     String?
  text      String
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
}

enum UserRole {
  USER
  ADMIN
}
